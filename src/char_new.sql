SELECT SUM(T1_INT_1), COUNT(T1_INT_1), AVG(T1_INT_1) FROM T1 GROUP BY T1_CHAR_1 HAVING COUNT(T1_INT_1) > 5 order by 1,2,3;
SELECT CEIL(T1_TIMESTAMP_1) FROM T1 WHERE T1_INT_1>=RAND ORDER BY 1;
SELECT CEIL(T1_FLOAT_1) FROM T1 WHERE T1_INT_1<=RAND ORDER BY 1;
SELECT T1_VARCHAR_1, SUM(T1_INT_1) AS SumValue, (SELECT AVG(SumValue) FROM (SELECT SUM(T2_INT_1) AS SumValue FROM T2 GROUP BY T2_VARCHAR_1) AS Subquery) AS AvgOfSums FROM T1 GROUP BY T1_VARCHAR_1 HAVING SumValue > (SELECT AVG(T1_INT_1) FROM T1 ) ORDER BY 1,2,3;
SELECT DATE_ADD(CURDATE(), INTERVAL T1_INT_1 DAY) FROM T1 WHERE T1_INT_1=RAND ORDER BY  1;
SELECT DATE_SUB(CURDATE(), INTERVAL T1_INT_1 DAY) FROM T1 WHERE T1_INT_1=RAND ORDER BY 1;
SELECT IF(T1_INT_1 > T1_INT_2, 'Greater', 'Lesser') FROM T1 WHERE T1_INT_1>=RAND ORDER BY 1;
SELECT T1_VARCHAR_1, T2_VARCHAR_1 FROM T1 JOIN T2  ON T1_INT_1 = T2_INT_1 WHERE T1_INT_1>=RAND ORDER BY 1 asc,2 desc;
SELECT MAX(CONCAT(T1_VARCHAR_1, T1_VARCHAR_2)) FROM T1 WHERE T1_INT_1>RAND ORDER BY 1;
SELECT T1_VARCHAR_1, SUM(T1_INT_1), AVG(T1_INT_2) FROM T1 GROUP BY T1_VARCHAR_1 HAVING AVG(T1_INT_2) > (SELECT AVG(T1_INT_2) FROM T1) ORDER BY 1, 2, 3 LIMIT 100;
SELECT T1_VARCHAR_1, T1_INT_1, SUM(T1_INT_1) OVER (PARTITION BY T1_VARCHAR_1 ORDER BY T1_INT_1) AS RunningTotal FROM T1 WHERE T1_INT_1>=RAND ORDER BY 1, 2 LIMIT 100;
SELECT T1_VARCHAR_1, CASE WHEN T1_INT_1 > T1_INT_2 THEN 'High' ELSE 'Low' END AS ComparisonResult, COUNT(*) FROM T1 WHERE T1_INT_1<RAND GROUP BY T1_VARCHAR_1, ComparisonResult HAVING COUNT(*) > 5 ORDER BY 1,2, 3 DESC LIMIT 100;
SELECT T1_VARCHAR_1, COUNT(*) FROM T1 WHERE LENGTH(T1_VARCHAR_1) > T1_INT_1 GROUP BY T1_VARCHAR_1 HAVING COUNT(*) > 5 ORDER BY 2,1 DESC LIMIT 100;
SELECT T1_VARCHAR_1, (SELECT COUNT(*) FROM T2 WHERE T2_INT_1 = T1_INT_1) AS RelatedCount FROM T1 WHERE T1_DATE_1<=RAND ORDER BY 2 DESC, 1 ASC LIMIT 100;
SELECT T1_VARCHAR_1, POW(T1_INT_1, 2) AS SquareValue, IF(T1_INT_1 MOD 2 = 0, 'Even', 'Odd') AS Parity FROM T1 WHERE T1_INT_1>=RAND ORDER BY 1,2,3 DESC LIMIT 100;
SELECT T1_VARCHAR_1, T1_INT_1 FROM T1 WHERE T1_INT_1>RAND UNION ALL SELECT T2_VARCHAR_1, T2_INT_1 FROM T2 WHERE T2_INT_1<RAND ORDER BY 2,1 ASC LIMIT 100;
